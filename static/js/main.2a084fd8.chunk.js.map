{"version":3,"sources":[" components/Food.jsx"," components/foodsource.jsx"," components/selectedfood.jsx"," components/home.jsx","App.js","index.js"],"names":["Food","imgpath","title","calorie","getdata","className","src","alt","type","name","onKeyUp","e","quantity","target","value","temp","Number","parseInt","id","jsonfood","calories","image","SelectedFood","removecart","onClick","Home","useState","filterui","setfilter","food","setfoodlist","sharedata","arg","foodstate","length","unshift","isnotexist","forEach","ele","console","log","cartui","filter","map","undefined","totalcalorie","reduce","output","next","ReactDOM","render","Fragment","document","querySelector","ui","htmlFor","toLowerCase","startsWith","placeholder","App","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a084fd8.chunk.js","sourcesContent":["\n\n\nconst Food = ({ imgpath, title, calorie, getdata }) => {\n\n\n    const handlesubmit = (e) => {\n\n\n        const quantity = e.target.value\n\n        const temp = {\n            name: title,\n            calorie: calorie,\n            quantity: quantity > 0 || quantity !== '' ? Number.parseInt(quantity) : 0\n        }\n        \n        getdata(temp)\n    }\n\n\n    return (\n        <div key={title} className=\"food\" >\n            <img src={imgpath} alt={title} />\n            <div className=\"content\">\n                <h4>{title}</h4>\n                <p>{calorie}</p>\n            </div>\n            <div className=\"inputfield\">\n                <input type=\"number\" name=\"quantity\"   onKeyUp={handlesubmit} id=\"quantity\" />\n            </div>\n        </div>\n    )\n}\n\n\nexport default Food","\nconst jsonfood = [\n    {\n        name: 'Chocolate milk',\n        calories: 208,\n        image: 'https://media.fooducate.com/products/images/180x180/4E71DE98-317D-F115-4913-A8A228E0A248.jpeg'\n    },\n    {\n        name: 'Pudding',\n        calories: 161,\n        image: 'https://bakingamoment.com/wp-content/uploads/2016/09/9602square.jpg'\n    },\n    {\n        name: 'Yogurt',\n        calories: 225,\n        image: 'https://media.fooducate.com/products/images/180x180/4E314DFD-0700-E38F-4726-BBAF7E06AA72.jpg'\n    },\n    {\n        name: 'Apple',\n        calories: 81,\n        image: 'https://images.zeald.com/site/freshco/images/apples/Breeze%20apple.jpg'\n    },\n    {\n        name: 'Cornbread',\n        calories: 198,\n        image: 'https://dearcrissy.com/wp-content/uploads/2017/01/easy-homemade-cornbread-4-175x175.jpg'\n    }\n\n]\nexport default jsonfood","\n\n\nconst SelectedFood = ({ quantity, title, calorie, removecart }) => {\n\n\n    const deletecart = (arg) => {\n        removecart(arg)\n    }\n    return (\n        <div key={title} className=\"food\" >\n            <div className=\"content\" key={title}>\n                <h4>{title}</h4>\n                <p>{calorie * quantity}</p>\n\n            </div>\n            <button onClick={() => deletecart(title)} className=\"delete\">X</button>\n\n        </div>\n    )\n}\n\n\nexport default SelectedFood","import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Food from \"./Food\"\n\nimport jsonfood from \"./foodsource\"\nimport SelectedFood from \"./selectedfood\"\n\n\n\nconst Home = () => {\n    const [filterui, setfilter] = useState()\n    const [food, setfoodlist] = useState([])\n\n\n    const sharedata = (arg) => {\n        const foodstate = food\n        if (foodstate.length === 0) {\n            foodstate.unshift(arg)\n            setfoodlist(foodstate)\n        }\n        else {\n            let isnotexist = true\n            foodstate.forEach(ele => {\n                if (ele.name === arg.name) {\n                    isnotexist = false\n                    ele.quantity = arg.quantity\n                }\n            })\n            if (isnotexist) {\n                foodstate.unshift(arg)\n                setfoodlist(foodstate)\n            }\n        }\n\n        const removecart = (arg) => {\n            console.log(arg);\n            console.log(food);\n            let foodstate = food\n            foodstate.forEach((ele => {\n                if (ele.name === arg)\n                    ele.quantity = 0\n            }))\n            const cartui = foodstate[0] ? foodstate.filter(ele => ele.quantity !== 0).map(ele => <SelectedFood key={ele.name} removecart={removecart} quantity={ele.quantity} title={ele.name} calorie={ele.calorie} />) : undefined\n\n            const totalcalorie = foodstate[0] ? foodstate.map(ele => ele.quantity * ele.calorie).reduce((output, next) => output + next) : undefined\n            ReactDOM.render(\n                <React.Fragment>\n                    <h1>Today's Food {totalcalorie} cal</h1>\n                    {cartui}\n                </React.Fragment>\n                , document.querySelector(\".cartlist\"))\n\n\n        }\n        const cartui = foodstate[0] ? foodstate.filter(ele => ele.quantity !== 0).map(ele => <SelectedFood key={ele.name} removecart={removecart} quantity={ele.quantity} title={ele.name} calorie={ele.calorie} />) : null\n        console.log(\"outside : \" + food.length);\n        const totalcalorie = foodstate[0] ? foodstate.map(ele => ele.quantity * ele.calorie).reduce((output, next) => output + next) : null\n        ReactDOM.render(\n            <React.Fragment>\n                <h1>Today's Food {totalcalorie} cal</h1>\n                {cartui}\n            </React.Fragment>\n            , document.querySelector(\".cartlist\"))\n    }\n\n    const filterfood = (e) => {\n        if (e.target.value)\n            setfilter(jsonfood.filter(ele => ele.name.toLowerCase().startsWith(e.target.value)).map(ele => <Food getdata={sharedata} key={ele.name} title={ele.name} calorie={ele.calories} imgpath={ele.image} />))\n        else\n            setfilter(undefined)\n    }\n\n    const ui = jsonfood.map(ele => <Food getdata={sharedata} key={ele.name} title={ele.name} calorie={ele.calories} imgpath={ele.image} />)\n\n    return (\n        <React.Fragment>\n            <div>\n                <div>\n                    <label htmlFor=\"foodsearch\">Search:  </label>\n                    <input type=\"search\" name=\"foodsearch\" id=\"foodsearch\" onKeyUp={filterfood} placeholder=\"Food\" />\n\n                </div>\n                {filterui ? filterui : ui}\n\n            </div>\n            <div className=\"cartlist\">\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Home","import Home from './ components/home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <header>\n        <h4>Pro-Nutrition</h4>\n      </header>\n      <section>\n        <Home/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}